from __future__ import print_function
import dsl
import geojson

# get settings and api etc
settings = dsl.api.get_settings()
for k,v in settings.iteritems():
    print('%s: %s' % (k,v))

print('\nDSL version %s' % dsl.api.get_dsl_version())
print('\nDSL API version %s' % dsl.api.get_api_version())

# get list of providers
providers = dsl.api.get_providers()
print('\n%s DSL providers are available:' % len(providers))
print('~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~')
for k, v in providers.iteritems():
    print('{: <20} {: <20}'.format(k, v['display_name']))

# get list of services
services = dsl.api.get_services()
print('\n%s DSL services are available:' % len(services))
print('~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~')
for k, v in services.iteritems():
    print('{: <50} {: <20}'.format(k, v['display_name']))


# get list of mapped parameters
mapped_parameters = dsl.api.get_mapped_parameters()
print('\n%s DSL mapped parameters are available:' % len(mapped_parameters))
print('~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~')
for i, p in enumerate(mapped_parameters):
    print('{: >2}. {:}'.format(i,p))

#filter services by parameter
choice = raw_input('Enter parameter number (default=2, elevation):')
if not choice:
    choice = '2'
choice=int(choice)

# get list of services
services = dsl.api.get_services(mapped_parameters[choice])
print('\n%s DSL services contain the %s parameter:' % (len(services),mapped_parameters[choice]))
print('~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~')
for k, v in services.iteritems():
    print('{: <50} {: <20}'.format(k, v['display_name']))

# get features from service
services = dsl.api.get_services()
print('\nChoose a DSL Service:')
print('~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~')
svcs = {}
for i, (k, v) in enumerate(services.iteritems()):
    svcs[i] = k
    print('{: >2}. {: <50} {: <20}'.format(i, k, v['display_name']))

choice = raw_input('Enter services to include (comma seperated) (default=4,8)')
if not choice:
    choice = '4, 8'
uris = [svcs[int(c)] for c in choice.split(',')]
print('\nChoose a DSL Service:')
print('~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~')
print('\n'.join(uris))

bbox = raw_input('Enter bounding_box (default:None)')
if not choice:
    bbox = None

parameter = raw_input('Enter parameter number (default:None)')
if not parameter:
    parameter = None
else:
    parameter = mapped_parameters[int(parameter)]

geom_type = raw_input('Enter geometry type Point/Polygon (default: None):')
if not geom_type:
    geom_type = None

update_cache = raw_input('Update cached metadata (y/n) (default: n):')
if update_cache.lower()=='y':
    update_cache = True
else:
    update_cache = False

# get features as pandas dataframe using as_dataframe=True kwarg
# this is useful when writing a python script
features_df = dsl.api.get_features(uris, geom_type=geom_type, bbox=bbox, parameter=parameter, update_cache=update_cache, as_dataframe=True)

print('~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~')
print('      %s features found' % len(features_df))
print('~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~')

# get features in geojson format, usefule for mappinh
# this should just read the cached data generated by the above line
features_geojson = dsl.api.get_features(uris, geom_type=geom_type, bbox=bbox, parameter=parameter)
filename = raw_input('Enter geojson filename (default: file not saved):')
if filename:
    with open(filename, 'w') as f:
        f.write(geojson.dumps(features_geojson))
